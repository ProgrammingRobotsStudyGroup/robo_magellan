# The GCS ID, which must match the parameters on the PixHawk.
gcs_id: 1

# The normal waypoint speed in m/s. This value is used
# as the cruising speed toward the next waypoint, unless
# overridded in the waypoint altitude encoding.
#
# This value is not used when approaching or escaping
# a cone under MANUAL mode. Instead, the PWM limits,
# below, are used as the maximum range.
normal_speed: 3.0

# The minimum cone appraoch speed in m/s. This value is
# used when driving in GUIDED mode toward a cone. This
# value is not used when driving in MANUAL mode. Instead,
# the PWM limits, below, as used.
min_speeed: 0.1

# The maximum turning velocity, in rad/sec, when using
# GUIDED mode to approach a cone. It is multipled by
# the turning factor calculated from the proporational
# constant, later in this configuration.
#
# This value is not used when using the throttle to
# approach the cone. Instead, the PWM limits are used
# as the maximum range.
max_turning: 5.0

# The throttle PWM range.
throttle_neutral: 1500
throttle_fwd_min: 1600
throttle_fwd_max: 2000
throttle_reverse_min: 1400
throttle_reverse_max: 1000

# The steering PWM range.
steering_neutral: 1425
steering_left_max: 1000
steering_right_max: 1880

# The distance in meters at which the cone is presumed
# to be very close and the rover should drive at the
# minimum speed.
cone_close_distance: 2.0

# Cone detection thresholds to use when driving to a cone
# or recovering when the robot cannot find the cone.
cone_normal_min_area: 200
cone_recovery_min_area: 300

# Sets whether to use commanded velocity under GUIDED mode
# or throttle control under MANUAL mode. If false, use
# GUIDED mode, if true, use MANUAL R/C override.
cone_approach_use_throttle: true

# The constant used to determine the cone approach speed as
# a fraction of either the cone cruise speed or the cone
# throttle range. This is multiplied by the distance to
# determine the speed factor from 0 to 1.
cone_approach_k_speed: 0.1

# The proportional constant used to determine the turn rate
# when approaching, as a fraction of the maximum turning.
cone_approach_k_turning: 1.75

# The strategy to use when escaping the cone.
#     simple_backup --> Back up straight
#     -other value- --> Back up and turn toward next waypoint
escape_strategy: simple_backup

# The duration in seconds to back up if using the 'simple_backup'
# strategy.
escape_backup_duration: 1.1

# The proportional constant used to determine the fraction
# of the cone waypoint speed to use when escaping from a
# cone. This times the heading difference to the next
# waypoint is used as the speed fraction from 0 to 1.
escape_k_speed: 0.05

# The proportional constant used to determine the fraction
# of the maximum turning to use when backing up from a
# cone. This times the heading difference gives the fraction
# of maximum turning to use.
escape_k_turning: 0.7

# A minimum speed to use when backing up while escaping the
# cone. If zero, the minimum speed, above, is used.
escape_min_speed: 0.7

# The maximum tolerance in heading error in radians before
# deciding that the robot has turned sufficiently toward
# the next cone. A value of 0.1 rad is about 6 degrees.
escape_angle_tolerance: 0.75

# The amount of time, in seconds, to kick the reverse throttle in
# order to put the ESC into reverse mode. If zero, no need to
# kick the reverse throttle to change direction (as in SITL, e.g.).
direction_change_reverse_duration: 2.0

# The relative throttle amount to use when initiating reverse, to
# move the ESC into reverse mode.
direction_change_reverse_speed: -1.0

# The amount of time, in seconds, to pause after the reverse kick
# before initiating reverse throttle again.
direction_change_idle_duration: 1.0

# The factor by which we multiply the minimum speed to get the
# circling speed when recovering from a cone miss.
circling_relative_speed: 1.5

# The maximum tolerance in heading error while circling.
circling_angle_tolerance: 0.15

# The horizontal field-of-view of the camera, in degrees.
horz_fov: 70.0

# The horizontal field-of-view of the camera, in pixels.
horz_pixels: 640

# The number of consecutive cone location messages to receive
# without a cone detection while driving in manual to a cone
# before we go into recovery mode. (Equals the number of
# video frames, if the cone detector is sending one message
# per frame.)
cone_lost_limit: 15

# MavROS port
fcu_url: /dev/pixhawk:115200
